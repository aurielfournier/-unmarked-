{
    "contents" : "# vector of models we are going to consider\nmodels <- c(\"~1\", \n            \"~scale_averagewater\",\n            \"~scale_averagewater+scale_averagewater2\",\n            \"~scale_short\",\n            \"~scale_int\",\n            \"~scale_short+scale_int\")\n\n###########\n# Needed Packages\n###########\n\nlibrary(unmarked)\nlibrary(ggplot2)\nlibrary(unmarked)\nlibrary(AICcmodavg)\n\n############\n# Reading in the Data\n############\n\nsora <- read.csv('./2012_sora.csv', header=T)\ncov <- read.csv('./2012_cov.csv', header=T)\n\n# the input files should have the rows ordered so they match already, but this makes sure that is true\nsora <- sora[order(sora$impound),]\ncov <- cov[order(cov$impound),]\n\n# creates the squared average water covariate\ncov$scale_averagewater2 <- cov$scale_averagewater^2\n\n# trims the sora input file so it only has the columns of distance bins, nothing else\nsora <- sora[,2:16]\n\n# define's the distances of the bins\ncutpt = as.numeric(c(0,1,2,3,4,5)) \n\n# brings the two files together into the ummarkedFrameGDS\numf = unmarkedFrameGDS(y=sora, \n                       numPrimary=3,\n                       siteCovs = cov,\n                       survey=\"line\", \n                       dist.breaks=cutpt,  \n                       unitsIn=\"m\", \n                       tlength=cov$length\n)\n\n\n# create list to dump all the models into\nmodel <- list()\n\n\nfor(i in 1:length(models)){\n  print(i)\n  model[[models[[i]]]] = gdistsamp(lambdaformula = as.formula(models[i]), \n                                   phiformula = ~1, \n                                   pformula = ~1,\n                                   data = umf, keyfun = \"hazard\", mixture=\"NB\",se = T, output=\"density\")\n}\n\n# I have this one seperate so it will be named 'global' \nmodel[[\"global\"]] <- gdistsamp(lambdaformula = ~scale_short+scale_averagewater+scale_averagewater2+scale_int, \n                          phiformula = ~1, \n                          pformula = ~ 1,\n                          data = umf, keyfun = \"hazard\", mixture=\"NB\",se = T, output=\"density\")\n\n# save(model, file=\"C:/Users/avanderlaar/Documents/unmarked/2012_models.Rdata\")\nlist  = fitList(model)\nmlist = modSel(list)\nmlist\n\n\n# model averages the three covariates to see \nmodavg12s <- modavg(model, parm=\"scale_short\", parm.type=\"lambda\")\nmodavg12i <- modavg(model, parm=\"scale_int\", parm.type=\"lambda\") #NOT\nmodavg12w <- modavg(model, parm=\"scale_averagewater\", parm.type=\"lambda\", exclude=list(\"~scale_averagewater+scale_averagewater2\")) #NOT\n\n\n## short\n\nscale_short12 <- data.frame(scale_short=seq(min(cov$scale_short), max(cov$scale_short), length.out=50),scale_averagewater=mean(cov$scale_averagewater), scale_averagewater2=mean(cov$averagewater)^2, scale_int=mean(cov$scale_int), short=seq(min(cov$short), max(cov$short), length.out=50))\n\nModnames <- names(model)\n\npred_short_12 <- modavgPred(cand.set=model, modnames=Modnames,newdata=scale_short12, parm.type=\"lambda\",type=\"response\", uncond.se=\"old\")\n\nshort12 <- cbind(scale_short12, pred_short_12)\n\nshort12$sd <- short12$uncond.se * sqrt(nrow(cov))\n\nshort12$ci <- qnorm(0.975)*short12$sd/sqrt(nrow(cov))\n\nshort12$upper <- short12$mod.avg.pred + short12$ci\nshort12$lower <- short12$mod.avg.pred - short12$ci\n\n(s12 <- ggplot()+ylab(\"Sora per hectare\")+xlab(\"Percent Cover Non Presistent \\nMoist Soil Vegetation\")+\n  geom_ribbon(data=short12, aes(x=short, ymax=upper, ymin=lower), fill=\"gray\", color=\"black\")+\n  geom_line(data=short12, aes(x=short, y=mod.avg.pred))+ggtitle(\"2012\")+\n  theme(axis.text.x = element_text(size = 12, color = \"black\"), \n        axis.text.y = element_text(size = 12, color = \"black\"), \n        axis.title.y = element_text(size = 20), plot.background = element_blank(), \n        panel.border = element_blank(), panel.grid.major = element_line(colour = NA), \n        panel.grid.minor = element_line(colour = NA), title = element_text(size = 20), \n        panel.background = element_rect(fill = \"white\"), axis.line = element_line(colour = \"black\"), \n        strip.background = element_rect(fill = \"white\", color = \"black\"), \n        strip.text = element_text(size = 15)))\n\n",
    "created" : 1450882780568.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2101705876",
    "id" : "BCF0D83D",
    "lastKnownWriteTime" : 1450281676,
    "path" : "C:/Users/avand/Documents/unmarked/rail_gdistsamp_for_review/rail_gdistsamp_code_for_review.R",
    "project_path" : "rail_gdistsamp_code_for_review.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}